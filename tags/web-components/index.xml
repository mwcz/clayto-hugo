<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Components on clayto</title>
    <link>https://clayto.com/tags/web-components/</link>
    <description>Recent content in Web Components on clayto</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Jul 2019 15:11:23 -0400</lastBuildDate>
    
	<atom:link href="https://clayto.com/tags/web-components/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Web Component Icons</title>
      <link>https://clayto.com/2019/07/web-component-icons/</link>
      <pubDate>Thu, 25 Jul 2019 15:11:23 -0400</pubDate>
      
      <guid>https://clayto.com/2019/07/web-component-icons/</guid>
      <description>pfe-icon { --pfe-icon--Color: var(--pbp-fg-color, white); } @media (min-width: 750px) { #TableOfContents { float: right; padding: 10px; /* margin: 10px; */ margin: 0 0 20px 20px; background-color: #242424; } }     Features Demo The pfe-icon tag Icon sets  Icon set definitions  resolveIconName  Integrating with Font Awesome Organizing icon sets  SVG injection and coloring  Setting icon colors  Coloring individual icons Coloring all icons Coloring groups of icons  Puzzler: MS Edge icon coloring  Performance  Icon size HTTP/1.</description>
    </item>
    
    <item>
      <title>Lazyloading Web Components</title>
      <link>https://clayto.com/2016/09/lazyloading-web-components/</link>
      <pubDate>Tue, 06 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://clayto.com/2016/09/lazyloading-web-components/</guid>
      <description>They say good developers are lazy. A tedious process is no match for a lazy developer. Below is an experiment in laziness. It&amp;rsquo;s a proof of concept for using Web Components without having to manually import each one.
I&amp;rsquo;m not sure exactly what to call it. It grazes the definitions of lazyloading, autoloading, and dependency injection, so I went with the laziest term.
Let&amp;rsquo;s set the scene, and find out if it&amp;rsquo;s a worthwhile developer convenience, or ease-of-use gone mad&amp;hellip;</description>
    </item>
    
  </channel>
</rss>