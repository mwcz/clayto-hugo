<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>css3 on clayto</title>
    <link>https://clayto.com/tags/css3/</link>
    <description>Recent content in css3 on clayto</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Feb 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://clayto.com/tags/css3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Drop64</title>
      <link>https://clayto.com/projects/drop64/</link>
      <pubDate>Wed, 05 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://clayto.com/projects/drop64/</guid>
      <description>Drop64 is an easy drag-and-drop tool for generating Data URIs from any file.
Check it out at drop64.com.
Here&amp;rsquo;s a demo recording of how easy it is.
Some benefits of Data URIs are:
 Fewer HTTP requests means faster page loads avoid cross-origin resource loading issues (fonts in Firefox, for example) you can paste the Data URI directly into your web browser URL bar to view the file (occasionally convenient)  If you noticed the similarity to ColorPal, well done!</description>
    </item>
    
    <item>
      <title>How not to use CSS3</title>
      <link>https://clayto.com/2011/11/how-not-to-use-css3/</link>
      <pubDate>Thu, 17 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://clayto.com/2011/11/how-not-to-use-css3/</guid>
      <description>How to ruin a good thing by abusing CSS3 text shadows&amp;hellip;
 CSS3!
The code:
// Random factors to determine x/y offsets for text shadows and amount of blur var x_factor = Math.floor(Math.random() * 20) - 10; var y_factor = Math.floor(Math.random() * 20) - 10; var blur_factor = Math.floor(Math.random() * 10) + 1; // Pretty colors var the_colors = [ &amp;#34;#7f9f7f&amp;#34;, &amp;#34;#dca3a3&amp;#34;, &amp;#34;#80d4aa&amp;#34;, &amp;#34;#f8f893&amp;#34;, &amp;#34;#ffcfaf&amp;#34;, &amp;#34;#e89393&amp;#34;, &amp;#34;#9ece9e&amp;#34;, &amp;#34;#c0bed1&amp;#34;, &amp;#34;#6c6c9c&amp;#34;, &amp;#34;#71d3b4&amp;#34;, &amp;#34;#a0afa0&amp;#34;, &amp;#34;#efefef&amp;#34; ]; function make_it() { // MAKE IT SHINE  // Build a string containing a comma-delimited list of the each shadow we want to apply  // sprintf would be nice here.</description>
    </item>
    
  </channel>
</rss>