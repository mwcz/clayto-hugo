{
  "version": 3,
  "sources": ["../node_modules/@mwcz/pbp-loading/dist/pbp-loading.js", "../rtw-timer.js", "../module-worker-test.js", "../rtw-render.js"],
  "sourcesContent": ["var a=class extends HTMLElement{constructor(){super();this.attachShadow({mode:\"open\"})}play(){this.style.setProperty(\"--play-state\",\"running\")}pause(){this.style.setProperty(\"--play-state\",\"paused\")}connectedCallback(){let n=this.hasAttribute(\"paused\"),t=+this.getAttribute(\"box-count\")||4,e=+this.getAttribute(\"duration\")||Math.sqrt(t/4),s=new Array(t).fill(),o=e/(t*.7),i=100*o,p=`\n            content: \"\";\n            position: absolute;\n            display: block;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            border: var(--pbp-loading-border, 1px solid white);\n            border-width: $WIDTH;\n            animation: $DIM ${e}s backwards alternate infinite;\n            animation-delay: var(--delay);\n            animation-play-state: var(--play-state);\n        `;this.shadowRoot.innerHTML=`\n            <style>\n                :host {\n                    display: inline-block;\n                    --play-state: ${n?\"paused\":\"running\"};\n                }\n                div {\n                    display: grid;\n                    grid-template-columns: ${s.map(()=>\"1fr\").join(\" \")};\n                    grid-gap: var(--pbp-loading-gap, 8px);\n                }\n                span {\n                    display: inline-block;\n                    position: relative;\n                    height: var(--pbp-loading-box-size, 20px);\n                    width: var(--pbp-loading-box-size, 20px);\n                }\n                @keyframes x {\n                  0% {\n                      transform: scaleX(var(--pbp-loading-grow, 150%));\n                      opacity: 0;\n                  }\n                  ${i}% {\n                      transform: scaleX(100%);\n                      opacity: 1;\n                  }\n                }\n                @keyframes y {\n                  0% {\n                      transform: scaleY(var(--pbp-loading-grow, 150%));\n                      opacity: 0;\n                  }\n                  ${i}% {\n                      transform: scaleY(100%);\n                      opacity: 1;\n                  }\n                }\n                span::before {\n                    ${p.replace(\"$WIDTH\",\"1px 0 1px 0\").replace(\"$DIM\",\"y\")}\n                }\n                span::after {\n                    ${p.replace(\"$WIDTH\",\"0 1px 0 1px\").replace(\"$DIM\",\"x\")}\n                }\n                */\n            </style>\n            <div>\n                ${s.map((d,r)=>`<span style=\"--delay:${r*o}s\"></span>`).join(\"\")}\n            </div>\n        `}};customElements.define(\"pbp-loading\",a);export{a as default};\n", "import \"@mwcz/pbp-loading\";\n\nexport default class Timer extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: \"open\" });\n\n        this.active = false;\n        this.paused = false;\n\n        this.step = this.step.bind(this);\n    }\n\n    connectedCallback() {\n        this.shadowRoot.innerHTML = `\n        <style>\n            pbp-loading {\n                width: 100%;\n            }\n            label {\n                display: grid;\n                grid-template-columns: 1fr;\n                grid-gap: 6px;\n            }\n        </style>\n        <label>\n            <pbp-loading paused duration=0.8 box-count=8></pbp-loading>\n            <span id=\"label-text\">&nbsp;</span>\n        </label>\n        `;\n\n        this.labelText = this.shadowRoot.querySelector(\"#label-text\");\n        this.loading = this.shadowRoot.querySelector(\"pbp-loading\");\n    }\n\n    resetSpinner() {\n        this.loading.style.removeProperty(\"--play-state\");\n        this.labelText.parentNode.removeChild(this.loading);\n        this.labelText.parentNode.insertBefore(this.loading, this.labelText);\n    }\n\n    start() {\n        console.log(\"TIMER start\");\n        if (!this.paused) {\n            this.startTime = performance.now();\n        } else {\n            this.paused = false;\n        }\n        this.active = true;\n        this.loading.play();\n        requestAnimationFrame(this.step);\n    }\n\n    pause() {\n        console.log(\"TIMER pause\");\n        this.paused = true;\n        this.loading.pause();\n    }\n\n    step() {\n        console.log(\"TIMER step\");\n        if (this.active && !this.paused) {\n            this._updateLabel();\n            requestAnimationFrame(this.step);\n        }\n    }\n\n    _updateLabel() {\n        const diff = performance.now() - this.startTime;\n        this.setLabel(`${diff.toFixed(1)}ms`);\n    }\n\n    stop() {\n        console.log(\"TIMER stop\");\n        this.resetSpinner();\n        this._updateLabel();\n        this.active = false;\n    }\n\n    setLabel(msg) {\n        this.labelText.innerText = msg;\n    }\n}\ncustomElements.define(\"rtw-timer\", Timer);\n", "export default function supportsModuleWorkers() {\n    let supportsModuleWorker = false;\n    const workerURL = URL.createObjectURL(new Blob([\"\"]));\n    const options = {\n        get type() {\n            supportsModuleWorker = true;\n        },\n    };\n    new Worker(workerURL, options).terminate();\n    URL.revokeObjectURL(workerURL);\n    return supportsModuleWorker;\n}\n", "import \"./rtw-timer.js\";\nimport supportsModuleWorkers from \"./module-worker-test.js\";\n\nexport default class RtwRender extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: \"open\" });\n        // fetch(`${import.meta.url}/../wasm_bg.wasm`);\n        this.shadowRoot.innerHTML = `\n            <style>\n                :host {\n                    display: inline-block;\n                    background-color: var(--rtw-background-color, black);\n                    padding: 14px;\n                    width: 528px;\n                }\n                canvas {\n                    width: 100%;\n                    image-rendering: -moz-crisp-edges;\n                    image-rendering: -webkit-crisp-edges;\n                    image-rendering: pixelated;\n                    image-rendering: crisp-edges;\n                }\n                .controls {\n                    margin-top: 8px;\n                    width: 100%;\n                    display: grid;\n                    grid-template-columns: 1fr 1fr;\n                    grid-gap: 14px;\n                }\n                button {\n                    border: var(--rtw-button-border, 1px solid white);\n                    background: var(--rtw-button-background, black);\n                    color: var(--rtw-button-color, white);\n                }\n                button:hover {\n                    background: var(--rtw-button-background-hover, #1f1f1f);\n                }\n                button:active, button:focus {\n                    background: var(--rtw-button-background-active, #3f3f3f);\n                }\n            </style>\n\n            <canvas width=\"500\" height=\"333\"></canvas>\n            <div class=\"controls\">\n                <button disabled>Render</button>\n                <rtw-timer></rtw-timer>\n            </div>\n            <p class=\"log\"></p>\n        `;\n    }\n\n    async connectedCallback() {\n        this.btn = this.shadowRoot.querySelector(\"button\");\n        this.canvas = this.shadowRoot.querySelector(\"canvas\");\n        this.timer = this.shadowRoot.querySelector(\"rtw-timer\");\n        this.log = this.shadowRoot.querySelector(\".log\");\n\n        this.ctx = this.canvas.getContext(\"2d\");\n\n        if (supportsModuleWorkers()) {\n            console.log(\"module workers supported, creating worker\");\n            this.worker = this.createWorker();\n        } else {\n            console.log(\n                \"module workers NOT supported, will render on the main thread\"\n            );\n            await this.initMainThreadRendering();\n        }\n\n        this.wasmInit = null;\n        this.wasmRender = null;\n\n        this.btn.addEventListener(\"click\", async () => {\n            await this.preRender();\n            this.render();\n        });\n    }\n\n    createWorker() {\n        const workerUrl = new URL(`${import.meta.url}/../wasm-worker.js`);\n        const worker = new Worker(workerUrl.href, { type: \"module\" });\n        worker.addEventListener(\"message\", async (e) => {\n            if (e.data.status === \"success\") {\n                if (e.data.data.imageData) {\n                    this.postRender(e.data.data.imageData);\n                } else if (e.data.data.initialized) {\n                    this.btn.disabled = false;\n                }\n            } else if (e.data.status === \"error\") {\n                if (e.data.data.type === \"render\") {\n                    this.timer.pause();\n                    this.log.textContent =\n                        \"Error occurred in worker during rendering.\";\n                }\n            }\n        });\n\n        worker.postMessage(\"init\");\n        return worker;\n    }\n\n    async initMainThreadRendering() {\n        // initialize wasm\n        const wasmModule = await import(\"./wasm-render.js\");\n        this.wasmInit = wasmModule.wasmInit;\n        this.wasmRender = wasmModule.wasmRender;\n        await this.wasmInit();\n\n        this.btn.disabled = false;\n\n        this.log.textContent =\n            \"Rendering will run on the main thread because Module Workers are not supported in this browser.  Expect lock-up during rendering.\";\n    }\n\n    /**\n     * Begin the rendering, including starting a timer widget, starting render\n     * within the wasm module, and writing the render result into the canvas.\n     */\n    async preRender() {\n        // clearImage();\n        this.timer.start();\n\n        // if running on the main thread, pause the timer, we'll update it once at the end.\n        if (!supportsModuleWorkers()) {\n            // this.timer.pause();\n        }\n        this.btn.disabled = true;\n    }\n\n    async render() {\n        if (supportsModuleWorkers()) {\n            console.log(\"starting render in a module worker\");\n            this.worker.postMessage(\"render\");\n        } else {\n            console.log(\"starting render on the main thread\");\n            if (!this.wasmInit) {\n                await this.initMainThreadRendering();\n            }\n            const imageData = await this.wasmRender();\n            this.postRender(imageData);\n        }\n    }\n\n    postRender(imageData) {\n        console.time(\"drawing canvas\");\n        this.ctx.putImageData(imageData, 0, 0);\n        console.timeEnd(\"drawing canvas\");\n        this.timer.step();\n        this.timer.stop();\n        this.btn.innerText = \"Re-render\";\n        this.btn.disabled = false;\n    }\n}\n\ncustomElements.define(\"rtw-render\", RtwRender);\n"],
  "mappings": "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",
  "names": []
}
