{
  "version": 3,
  "sources": ["../rtw-timer.js", "../rtw-render.js"],
  "sourcesContent": ["export default class Timer extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: \"open\" });\n        this.active = false;\n        this.paused = false;\n\n        this.shadowRoot.innerHTML = `\n        <style>\n            meter {\n                width: 100%;\n            }\n        </style>\n        <label>\n            <meter optimum=0 low=800 high=1500 value=0 max=2500></meter>\n            <span id=\"label-text\">&nbsp;</span>\n        </label>\n        `;\n\n        this.labelText = this.shadowRoot.querySelector(\"#label-text\");\n        this.meter = this.shadowRoot.querySelector(\"meter\");\n\n        this.step = this.step.bind(this);\n    }\n\n    start() {\n        if (!this.paused) {\n            this.startTime = performance.now();\n        } else {\n            this.paused = false;\n        }\n        this.active = true;\n        requestAnimationFrame(this.step);\n    }\n\n    pause() {\n        this.paused = true;\n    }\n\n    step() {\n        if (this.active && !this.paused) {\n            this._updateLabel();\n            requestAnimationFrame(this.step);\n        }\n    }\n\n    _updateLabel() {\n        const diff = performance.now() - this.startTime;\n        this.setLabel(`${diff.toFixed(1)}ms`);\n        this.meter.value = diff;\n    }\n\n    stop() {\n        this._updateLabel();\n        this.active = false;\n    }\n\n    setLabel(msg) {\n        this.labelText.innerText = msg;\n    }\n}\ncustomElements.define(\"rtw-timer\", Timer);\n", "import \"./rtw-timer.js\";\n\nexport default class RtwRender extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: \"open\" });\n        fetch(`${import.meta.url}/../wasm_bg.wasm`);\n        this.shadowRoot.innerHTML = `\n            <style>\n                :host {\n                    display: inline-block;\n                    background-color: var(--rtw-background-color, grey);\n                    padding: 14px;\n                }\n                canvas {\n                    aspect-ratio: 5/3.33;\n                    width: 100%;\n                    image-rendering: -moz-crisp-edges;\n                    image-rendering: -webkit-crisp-edges;\n                    image-rendering: pixelated;\n                    image-rendering: crisp-edges;\n                }\n                .controls {\n                    margin-top: 8px;\n                    width: 100%;\n                    display: grid;\n                    grid-template-columns: 1fr 1fr;\n                    grid-gap: 14px;\n                    overflow-y: hidden;\n                }\n            </style>\n\n            <canvas width=\"500\" height=\"333\"></canvas>\n            <div class=\"controls\">\n                <button disabled>Render</button>\n                <rtw-timer></rtw-timer>\n            </div>\n        `;\n    }\n\n    connectedCallback() {\n        this.btn = this.shadowRoot.querySelector(\"button\");\n        this.canvas = this.shadowRoot.querySelector(\"canvas\");\n        this.timer = this.shadowRoot.querySelector(\"rtw-timer\");\n\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.moduleWorkerSupported = true;\n\n        this.worker = this.createWorker();\n\n        this.wasmInit = null;\n        this.wasmRender = null;\n\n        this.btn.addEventListener(\"click\", () => {\n            this.preRender();\n            this.render();\n        });\n    }\n\n    createWorker() {\n        const workerUrl = new URL(`${import.meta.url}/../wasm-worker.js`);\n        const worker = new Worker(workerUrl.href, { type: \"module\" });\n        worker.addEventListener(\"message\", async (e) => {\n            if (e.data.status === \"success\") {\n                if (e.data.data.imageData) {\n                    this.postRender(e.data.data.imageData);\n                } else if (e.data.data.initialized) {\n                    this.btn.disabled = false;\n                }\n            } else if (e.data.status === \"error\") {\n                console.log(`web worker error type: ${e.data.data.type}`);\n                if (e.data.data.type === \"import\") {\n                    // switch to main thread mode\n                    this.moduleWorkerSupported = false;\n                    // enable the render button\n                    this.btn.disabled = false;\n\n                    // initialize wasm\n                    const wasmModule = await import(\"./wasm-render.js\");\n                    this.wasmInit = wasmModule.wasmInit;\n                    this.wasmRender = wasmModule.wasmRender;\n                    await wasmInit();\n\n                    this.timer.pause();\n                    this.timer.setLabel(\n                        \"Module worker not supported in this browser; running on the main thread (expect lockup during render).\"\n                    );\n                }\n                if (e.data.data.type === \"render\") {\n                    this.timer.pause();\n                    this.timer.setLabel(\n                        \"Error occurred in worker during rendering.\"\n                    );\n                }\n            }\n        });\n\n        worker.postMessage(\"init\");\n        return worker;\n    }\n\n    /**\n     * Begin the rendering, including starting a timer widget, starting render\n     * within the wasm module, and writing the render result into the canvas.\n     */\n    async preRender() {\n        // clearImage();\n        this.timer.start();\n        this.btn.disabled = true;\n    }\n\n    async render() {\n        console.log(\n            `starting render ${\n                [\"ON\", \"OFF\"][~~this.moduleWorkerSupported]\n            } the main thread`\n        );\n        if (this.moduleWorkerSupported) {\n            this.worker.postMessage(\"render\");\n        } else {\n            this.postRender(await this.wasmRender());\n        }\n    }\n    postRender(imageData) {\n        console.time(\"drawing canvas\");\n        this.ctx.putImageData(imageData, 0, 0);\n        console.timeEnd(\"drawing canvas\");\n        this.timer.step();\n        this.timer.stop();\n        this.btn.innerText = \"Re-render\";\n        this.btn.disabled = false;\n    }\n}\n\ncustomElements.define(\"rtw-render\", RtwRender);\n"],
  "mappings": "AAAA,mBAAmC,aAC/B,cACI,QACA,KAAK,aAAa,CAAE,KAAM,SAC1B,KAAK,OAAS,GACd,KAAK,OAAS,GAEd,KAAK,WAAW,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAY5B,KAAK,UAAY,KAAK,WAAW,cAAc,eAC/C,KAAK,MAAQ,KAAK,WAAW,cAAc,SAE3C,KAAK,KAAO,KAAK,KAAK,KAAK,MAG/B,QACI,AAAK,KAAK,OAGN,KAAK,OAAS,GAFd,KAAK,UAAY,YAAY,MAIjC,KAAK,OAAS,GACd,sBAAsB,KAAK,MAG/B,QACI,KAAK,OAAS,GAGlB,OACI,AAAI,KAAK,QAAU,CAAC,KAAK,QACrB,MAAK,eACL,sBAAsB,KAAK,OAInC,eACI,GAAM,GAAO,YAAY,MAAQ,KAAK,UACtC,KAAK,SAAS,GAAG,EAAK,QAAQ,QAC9B,KAAK,MAAM,MAAQ,EAGvB,OACI,KAAK,eACL,KAAK,OAAS,GAGlB,SAAS,GACL,KAAK,UAAU,UAAY,IA1D5B,EAAP,EA6DA,eAAe,OAAO,YAAa,GC7DnC,mBAEuC,aACnC,cACI,QACA,KAAK,aAAa,CAAE,KAAM,SAC1B,MAAM,GAAG,YAAY,uBACrB,KAAK,WAAW,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAiChC,oBACI,KAAK,IAAM,KAAK,WAAW,cAAc,UACzC,KAAK,OAAS,KAAK,WAAW,cAAc,UAC5C,KAAK,MAAQ,KAAK,WAAW,cAAc,aAE3C,KAAK,IAAM,KAAK,OAAO,WAAW,MAClC,KAAK,sBAAwB,GAE7B,KAAK,OAAS,KAAK,eAEnB,KAAK,SAAW,KAChB,KAAK,WAAa,KAElB,KAAK,IAAI,iBAAiB,QAAS,KAC/B,KAAK,YACL,KAAK,WAIb,eACI,GAAM,GAAY,GAAI,KAAI,GAAG,YAAY,yBACnC,EAAS,GAAI,QAAO,EAAU,KAAM,CAAE,KAAM,WAClD,SAAO,iBAAiB,UAAW,KAAO,KACtC,GAAI,EAAE,KAAK,SAAW,UAClB,AAAI,EAAE,KAAK,KAAK,UACZ,KAAK,WAAW,EAAE,KAAK,KAAK,WACrB,EAAE,KAAK,KAAK,aACnB,MAAK,IAAI,SAAW,YAEjB,EAAE,KAAK,SAAW,SAEzB,GADA,QAAQ,IAAI,0BAA0B,EAAE,KAAK,KAAK,QAC9C,EAAE,KAAK,KAAK,OAAS,UAErB,KAAK,sBAAwB,GAE7B,KAAK,IAAI,SAAW,GAGpB,GAAM,GAAa,KAAa,4BAChC,KAAK,SAAW,EAAW,SAC3B,KAAK,WAAa,EAAW,WAC7B,KAAM,YAEN,KAAK,MAAM,QACX,KAAK,MAAM,SACP,0GAGR,AAAI,EAAE,KAAK,KAAK,OAAS,UACrB,MAAK,MAAM,QACX,KAAK,MAAM,SACP,kDAMhB,EAAO,YAAY,QACZ,OAOL,aAEF,KAAK,MAAM,QACX,KAAK,IAAI,SAAW,QAGlB,UACF,QAAQ,IACJ,mBACI,CAAC,KAAM,OAAO,CAAC,CAAC,KAAK,0CAG7B,AAAI,KAAK,sBACL,KAAK,OAAO,YAAY,UAExB,KAAK,WAAW,KAAM,MAAK,cAGnC,WAAW,GACP,QAAQ,KAAK,kBACb,KAAK,IAAI,aAAa,EAAW,EAAG,GACpC,QAAQ,QAAQ,kBAChB,KAAK,MAAM,OACX,KAAK,MAAM,OACX,KAAK,IAAI,UAAY,YACrB,KAAK,IAAI,SAAW,KAhIrB,EAFP,EAsIA,eAAe,OAAO,aAAc",
  "names": []
}
