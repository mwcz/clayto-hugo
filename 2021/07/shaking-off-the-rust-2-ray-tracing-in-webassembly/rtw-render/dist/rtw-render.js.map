{
  "version": 3,
  "sources": ["../node_modules/@mwcz/pbp-loading/dist/pbp-loading.js", "../rtw-timer.js", "../caniuse-module-worker.js", "../rtw-render.js"],
  "sourcesContent": ["var a=class extends HTMLElement{constructor(){super();this.attachShadow({mode:\"open\"})}play(){this.style.setProperty(\"--play-state\",\"running\")}pause(){this.style.setProperty(\"--play-state\",\"paused\")}connectedCallback(){let n=this.hasAttribute(\"paused\"),t=+this.getAttribute(\"box-count\")||4,e=+this.getAttribute(\"duration\")||Math.sqrt(t/4),s=new Array(t).fill(),o=e/(t*.7),i=100*o,p=`\n            content: \"\";\n            position: absolute;\n            display: block;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            border: var(--pbp-loading-border, 1px solid white);\n            border-width: $WIDTH;\n            animation: $DIM ${e}s backwards alternate infinite;\n            animation-delay: var(--delay);\n            animation-play-state: var(--play-state);\n        `;this.shadowRoot.innerHTML=`\n            <style>\n                :host {\n                    display: inline-block;\n                    --play-state: ${n?\"paused\":\"running\"};\n                }\n                div {\n                    display: grid;\n                    grid-template-columns: ${s.map(()=>\"1fr\").join(\" \")};\n                    grid-gap: var(--pbp-loading-gap, 8px);\n                }\n                span {\n                    display: inline-block;\n                    position: relative;\n                    height: var(--pbp-loading-box-size, 20px);\n                    width: var(--pbp-loading-box-size, 20px);\n                }\n                @keyframes x {\n                  0% {\n                      transform: scaleX(var(--pbp-loading-grow, 150%));\n                      opacity: 0;\n                  }\n                  ${i}% {\n                      transform: scaleX(100%);\n                      opacity: 1;\n                  }\n                }\n                @keyframes y {\n                  0% {\n                      transform: scaleY(var(--pbp-loading-grow, 150%));\n                      opacity: 0;\n                  }\n                  ${i}% {\n                      transform: scaleY(100%);\n                      opacity: 1;\n                  }\n                }\n                span::before {\n                    ${p.replace(\"$WIDTH\",\"1px 0 1px 0\").replace(\"$DIM\",\"y\")}\n                }\n                span::after {\n                    ${p.replace(\"$WIDTH\",\"0 1px 0 1px\").replace(\"$DIM\",\"x\")}\n                }\n                */\n            </style>\n            <div>\n                ${s.map((d,r)=>`<span style=\"--delay:${r*o}s\"></span>`).join(\"\")}\n            </div>\n        `}};customElements.define(\"pbp-loading\",a);export{a as default};\n", "import \"@mwcz/pbp-loading\";\n\nexport default class Timer extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: \"open\" });\n\n        this.active = false;\n        this.paused = false;\n\n        this.step = this.step.bind(this);\n    }\n\n    connectedCallback() {\n        this.shadowRoot.innerHTML = `\n        <style>\n            pbp-loading {\n                width: 100%;\n            }\n            label {\n                display: grid;\n                grid-template-columns: 1fr;\n                grid-gap: 6px;\n            }\n        </style>\n        <label>\n            <pbp-loading paused duration=0.8 box-count=8></pbp-loading>\n            <span id=\"label-text\">&nbsp;</span>\n        </label>\n        `;\n\n        this.labelText = this.shadowRoot.querySelector(\"#label-text\");\n        this.loading = this.shadowRoot.querySelector(\"pbp-loading\");\n    }\n\n    resetSpinner() {\n        this.loading.style.removeProperty(\"--play-state\");\n        this.labelText.parentNode.removeChild(this.loading);\n        this.labelText.parentNode.insertBefore(this.loading, this.labelText);\n    }\n\n    start() {\n        if (!this.paused) {\n            this.startTime = performance.now();\n        } else {\n            this.paused = false;\n        }\n        this.active = true;\n        this.loading.play();\n        requestAnimationFrame(this.step);\n    }\n\n    pause() {\n        this.paused = true;\n        this.loading.pause();\n    }\n\n    step() {\n        if (this.active && !this.paused) {\n            this.duration = performance.now() - this.startTime;\n            this._updateLabel(this.duration);\n            requestAnimationFrame(this.step);\n        }\n    }\n\n    _updateLabel(duration) {\n        this.setLabel(`${duration.toFixed(1)}ms`);\n    }\n\n    stop() {\n        this.resetSpinner();\n        this.active = false;\n    }\n\n    setLabel(msg) {\n        this.labelText.innerText = msg;\n    }\n}\ncustomElements.define(\"rtw-timer\", Timer);\n", "export default function supportsModuleWorkers() {\n    let supportsModuleWorker = false;\n    const workerURL = URL.createObjectURL(new Blob([\"\"]));\n    const options = {\n        get type() {\n            supportsModuleWorker = true;\n        },\n    };\n    new Worker(workerURL, options).terminate();\n    URL.revokeObjectURL(workerURL);\n    return supportsModuleWorker;\n}\n", "import \"./rtw-timer.js\";\nimport supportsModuleWorkers from \"./caniuse-module-worker.js\";\n\nexport default class RtwRender extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: \"open\" });\n        fetch(`${import.meta.url}/../wasm_bg.wasm`);\n        this.shadowRoot.innerHTML = `\n            <style>\n                :host {\n                    display: inline-block;\n                    background-color: var(--rtw-background-color, black);\n                    padding: 14px;\n                }\n                canvas {\n                    image-rendering: -moz-crisp-edges;\n                    image-rendering: -webkit-crisp-edges;\n                    image-rendering: pixelated;\n                    image-rendering: crisp-edges;\n                }\n                .controls {\n                    margin-top: 8px;\n                    width: 100%;\n                    display: grid;\n                    grid-template-columns: 1fr 1fr;\n                    grid-gap: 14px;\n                }\n                button {\n                    border: var(--rtw-button-border, 1px solid white);\n                    background: var(--rtw-button-background, black);\n                    color: var(--rtw-button-color, white);\n                }\n                button:hover {\n                    background: var(--rtw-button-background-hover, #1f1f1f);\n                }\n                button:active, button:focus {\n                    background: var(--rtw-button-background-active, #3f3f3f);\n                }\n                .log {\n                  margin-bottom: 0;\n                  font-family: monospace;\n                  white-space: pre;\n                  line-height: 1.4;\n                }\n            </style>\n\n            <canvas width=\"500\" height=\"333\"></canvas>\n            <div class=\"controls\">\n                <button disabled>Render</button>\n                <rtw-timer></rtw-timer>\n            </div>\n            <p class=\"log\">Total rays        = \u2754\nTotal duration    = \u2754\nTime per ray      = \u2754\nRay rate          = \u2754\nImage width       = \u2754\nImage height      = \u2754\nSamples per pixel = \u2754</p>\n        `;\n    }\n\n    async connectedCallback() {\n        this.btn = this.shadowRoot.querySelector(\"button\");\n        this.canvas = this.shadowRoot.querySelector(\"canvas\");\n        this.timer = this.shadowRoot.querySelector(\"rtw-timer\");\n        this.log = this.shadowRoot.querySelector(\".log\");\n\n        this.ctx = this.canvas.getContext(\"2d\");\n\n        if (supportsModuleWorkers()) {\n            console.log(\"module workers supported, creating worker\");\n            this.worker = this.createWorker();\n        } else {\n            console.log(\n                \"module workers NOT supported, will render on the main thread\"\n            );\n            await this.initMainThreadRendering();\n        }\n\n        this.wasmInit = null;\n        this.wasmRender = null;\n\n        this.btn.addEventListener(\"click\", async () => {\n            await this.preRender();\n            this.render();\n        });\n    }\n\n    createWorker() {\n        const workerUrl = new URL(`${import.meta.url}/../wasm-worker.js`);\n        const worker = new Worker(workerUrl.href, { type: \"module\" });\n        worker.addEventListener(\"message\", async (e) => {\n            if (e.data.status === \"success\") {\n                if (e.data.data.renderResult) {\n                    this.postRender(e.data.data.renderResult);\n                } else if (e.data.data.initialized) {\n                    this.btn.disabled = false;\n                }\n            } else if (e.data.status === \"error\") {\n                if (e.data.data.type === \"render\") {\n                    this.timer.pause();\n                    this.log.textContent =\n                        \"Error occurred in worker during rendering.\";\n                }\n            }\n        });\n\n        worker.postMessage(\"init\");\n        return worker;\n    }\n\n    async initMainThreadRendering() {\n        // initialize wasm\n        const wasmModule = await import(\"./wasm-render.js\");\n        this.wasmInit = wasmModule.wasmInit;\n        this.wasmRender = wasmModule.wasmRender;\n        await this.wasmInit();\n\n        this.btn.disabled = false;\n\n        this.log.textContent =\n            \"Rendering will run on the main thread because Module Workers are not supported in this browser.  Expect lock-up during rendering.\";\n    }\n\n    /**\n     * Begin the rendering, including starting a timer widget, starting render\n     * within the wasm module, and writing the render result into the canvas.\n     */\n    async preRender() {\n        // clearImage();\n        this.timer.start();\n\n        // if running on the main thread, pause the timer, we'll update it once at the end.\n        if (!supportsModuleWorkers()) {\n            // this.timer.pause();\n        }\n        this.btn.disabled = true;\n    }\n\n    async render() {\n        if (supportsModuleWorkers()) {\n            console.log(\"starting render in a module worker\");\n            this.worker.postMessage(\"render\");\n        } else {\n            console.log(\"starting render on the main thread\");\n            if (!this.wasmInit) {\n                await this.initMainThreadRendering();\n            }\n            const imageData = await this.wasmRender();\n            this.postRender(imageData);\n        }\n    }\n\n    writeStats(renderResult) {\n        const total_rays = Number(renderResult.total_rays);\n        this.log.textContent = `Total rays        = ${total_rays.toLocaleString(\n            \"en-US\"\n        )}\nTotal duration    = ${this.timer.duration.toFixed(1)} ms\nTime per ray      = ${((this.timer.duration / total_rays) * 1000).toFixed(\n            4\n        )} microseconds/ray\nRay rate          = ${(total_rays / this.timer.duration / 1000).toFixed(\n            4\n        )} rays/microsecond\nImage width       = ${renderResult.width}\nImage height      = ${renderResult.height}\nSamples per pixel = ${renderResult.samples_per_pixel}`;\n    }\n\n    postRender(renderResult) {\n        console.time(\"drawing canvas\");\n        this.canvas.width = renderResult.width;\n        this.canvas.height = renderResult.height;\n        this.ctx.putImageData(\n            new ImageData(renderResult.pixels, renderResult.width),\n            0,\n            0\n        );\n        console.timeEnd(\"drawing canvas\");\n        this.timer.step();\n        this.timer.stop();\n\n        this.writeStats(renderResult);\n\n        this.btn.innerText = \"Re-render\";\n        this.btn.disabled = false;\n    }\n}\n\ncustomElements.define(\"rtw-render\", RtwRender);\n"],
  "mappings": "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",
  "names": []
}
