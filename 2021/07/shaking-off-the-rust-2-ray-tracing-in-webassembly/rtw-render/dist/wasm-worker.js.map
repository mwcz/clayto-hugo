{
  "version": 3,
  "sources": ["../wasm-worker.js"],
  "sourcesContent": ["// try importing wasm-render.  if the import fails, it probably indicates a\n// browser that doesn't support module imports from web workers, like Firefox,\n// so report an error back to the main thread, which will respond by running\n// the rendering on the main thread.\n\nlet wasmRender;\nlet initialized = false;\n\nconsole.log(\"wasm-worker module\");\n\naddEventListener(\"message\", async (e) => {\n    if (e.data === \"init\") {\n        try {\n            const module = await import(`./wasm-render.js`);\n            wasmRender = module.wasmRender;\n            await module.wasmInit();\n            initialized = true;\n            postMessage({ status: \"success\", data: { initialized } });\n        } catch (e) {\n            console.error(e);\n            postMessage({\n                status: \"error\",\n                data: { type: \"import\" },\n                message: \"error occurred during web worker import\",\n            });\n        }\n    } else if (e.data === \"render\") {\n        try {\n            const renderResult = await wasmRender();\n            postMessage({\n                status: \"success\",\n                data: {\n                    initialized,\n                    renderResult: {\n                        pixels: renderResult.pixels,\n                        total_rays: renderResult.total_rays,\n                        width: renderResult.width,\n                        height: renderResult.height,\n                        samples_per_pixel: renderResult.samples_per_pixel,\n                    },\n                },\n            });\n        } catch (error) {\n            console.error(error);\n            postMessage({\n                status: \"error\",\n                data: { type: \"render\", error },\n                message: \"error occurred during render\",\n            });\n        }\n    }\n});\n\n// // import wasmRender from \"./wasm-render.js\";\n\n// try {\n//     console.log('importing');\n//     import(\"./wasm-render.js\").then(({wasmRender}) => {\n//         console.log('imported');\n//         addEventListener('message', () => {\n//             postMessage({status: \"success\", data: await wasmRender()});\n//         });\n//     });\n// } catch (e) {\n//     postMessage({status: \"error\", message: \"error occurred during import or render\"});\n// }\n"],
  "mappings": "AAKA,GAAI,GACA,EAAc,GAElB,QAAQ,IAAI,sBAEZ,iBAAiB,UAAW,KAAO,IAAM,CACrC,GAAI,EAAE,OAAS,OACX,GAAI,CACA,GAAM,GAAS,KAAM,QAAO,6BAC5B,EAAa,EAAO,WACpB,KAAM,GAAO,WACb,EAAc,GACd,YAAY,CAAE,OAAQ,UAAW,KAAM,CAAE,uBACpC,EAAP,CACE,QAAQ,MAAM,GACd,YAAY,CACR,OAAQ,QACR,KAAM,CAAE,KAAM,UACd,QAAS,oDAGV,EAAE,OAAS,SAClB,GAAI,CACA,GAAM,GAAe,KAAM,KAC3B,YAAY,CACR,OAAQ,UACR,KAAM,CACF,cACA,aAAc,CACV,OAAQ,EAAa,OACrB,WAAY,EAAa,WACzB,MAAO,EAAa,MACpB,OAAQ,EAAa,OACrB,kBAAmB,EAAa,4BAIvC,EAAP,CACE,QAAQ,MAAM,GACd,YAAY,CACR,OAAQ,QACR,KAAM,CAAE,KAAM,SAAU,SACxB,QAAS",
  "names": []
}
