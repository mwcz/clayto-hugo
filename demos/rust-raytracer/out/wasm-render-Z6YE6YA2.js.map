{
  "version": 3,
  "sources": ["../pkg/wasm.js", "../wasm-render.js"],
  "sourcesContent": ["\nlet wasm;\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* Example render.\n* @returns {Uint8Array}\n*/\nexport function render() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.render(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v0 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('wasm_bg.wasm', import.meta.url);\n    }\n    const imports = {};\n\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n\n    return wasm;\n}\n\nexport default init;\n\n", "import init, {render} from \"./pkg/wasm.js\";\n\nconsole.log(\"wasm-render module\");\n\n/**\n * Initialize wasm module and run the render function.  Embeds the render\n * result (flat RGBA array of u8's) into a Uint8ClampedArray view and embeds\n * that into an ImageData object suitable to draw into a <canvas>.\n *\n * ImageData is a supported type to pass to/from Web Workers:\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n */\nexport async function wasmRender() {\n    console.time(\"tracing rays\");\n    const pixels = render();\n    console.timeEnd(\"tracing rays\");\n\n    return new ImageData(new Uint8ClampedArray(pixels), 500);\n}\n\n/**\n * Initialize the WASM module.\n */\nexport async function wasmInit() {\n    console.time(\"init\");\n    await init();\n    console.timeEnd(\"init\");\n}\n"],
  "mappings": "AACA,GAAI,GAEA,EAAuB,KAC3B,YAA2B,CACvB,MAAI,KAAyB,MAAQ,EAAqB,SAAW,EAAK,OAAO,SAC7E,GAAuB,GAAI,YAAW,EAAK,OAAO,SAE/C,EAGX,GAAI,GAAuB,KAC3B,YAA2B,CACvB,MAAI,KAAyB,MAAQ,EAAqB,SAAW,EAAK,OAAO,SAC7E,GAAuB,GAAI,YAAW,EAAK,OAAO,SAE/C,EAGX,WAA6B,EAAK,EAAK,CACnC,MAAO,KAAkB,SAAS,EAAM,EAAG,EAAM,EAAI,GAMlD,YAAkB,CACrB,GAAI,CACA,GAAM,GAAS,EAAK,gCAAgC,KACpD,EAAK,OAAO,GACZ,GAAI,GAAK,IAAkB,EAAS,EAAI,GACpC,EAAK,IAAkB,EAAS,EAAI,GACpC,EAAK,EAAoB,EAAI,GAAI,QACrC,SAAK,gBAAgB,EAAI,EAAK,GACvB,SACT,CACE,EAAK,gCAAgC,KAI7C,iBAAoB,EAAQ,EAAS,CACjC,GAAI,MAAO,WAAa,YAAc,YAAkB,UAAU,CAC9D,GAAI,MAAO,aAAY,sBAAyB,WAC5C,GAAI,CACA,MAAO,MAAM,aAAY,qBAAqB,EAAQ,SAEjD,EAAP,CACE,GAAI,EAAO,QAAQ,IAAI,iBAAmB,mBACtC,QAAQ,KAAK,oMAAqM,OAGlN,MAAM,GAKlB,GAAM,GAAQ,KAAM,GAAO,cAC3B,MAAO,MAAM,aAAY,YAAY,EAAO,OAEzC,CACH,GAAM,GAAW,KAAM,aAAY,YAAY,EAAQ,GAEvD,MAAI,aAAoB,aAAY,SACzB,CAAE,WAAU,UAGZ,GAKnB,iBAAoB,EAAO,CACvB,AAAI,MAAO,IAAU,aACjB,GAAQ,GAAI,KAAI,eAAgB,YAAY,MAEhD,GAAM,GAAU,GAGhB,AAAI,OAAO,IAAU,UAAa,MAAO,UAAY,YAAc,YAAiB,UAAa,MAAO,MAAQ,YAAc,YAAiB,OAC3I,GAAQ,MAAM,IAKlB,GAAM,CAAE,WAAU,UAAW,KAAM,GAAK,KAAM,GAAO,GAErD,SAAO,EAAS,QAChB,EAAK,uBAAyB,EAEvB,EAGX,GAAO,GAAQ,EC1Ff,QAAQ,IAAI,sBAUZ,kBAAmC,CAC/B,QAAQ,KAAK,gBACb,GAAM,GAAS,IACf,eAAQ,QAAQ,gBAET,GAAI,WAAU,GAAI,mBAAkB,GAAS,KAMxD,kBAAiC,CAC7B,QAAQ,KAAK,QACb,KAAM,KACN,QAAQ,QAAQ",
  "names": []
}
