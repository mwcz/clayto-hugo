{
  "version": 3,
  "sources": ["egg.ts"],
  "sourcesContent": ["\nclass Vec2 {\n    x: number = 0;\n    y: number = 0;\n\n    constructor(x: number, y: number) {\n        this.set(x, y);\n    }\n\n    mag(): number {\n        return Math.sqrt(this.x**2 + this.y**2);\n    }\n\n    set(x: number, y: number): void {\n        this.x = x;\n        this.y = y;\n    }\n\n    normalize(): void {\n        const mag = this.mag();\n        this.x /= mag;\n        this.y /= mag;\n    }\n\n    add(other: Vec2): void {\n        this.x += other.x;\n        this.y += other.y;\n    }\n\n    sub(other: Vec2): void {\n        this.x -= other.x;\n        this.y -= other.y;\n    }\n\n    muls(scalar: number): void {\n        this.x *= scalar;\n        this.y *= scalar;\n    }\n\n    scale(scalar: number): void {\n        let mag = this.mag();\n        this.x = scalar * this.x / mag;\n        this.y = scalar * this.y / mag;\n    }\n\n    cross(other: Vec2): number {\n        return this.x * other.y - this.y * other.x;\n    }\n}\n\nlet mouse = new Vec2(0, 0);\n\ndocument.addEventListener(\"mousemove\", (ev: any) => {\n    mouse.set( ev.clientX, ev.clientY );\n});\n\n\nclass Rect {\n\n    el: HTMLElement;\n    size: Vec2;\n    opos: Vec2;\n    off: Vec2;\n    vel: Vec2;\n    acc: Vec2;\n    rot: number;\n    rotv: number;\n    torque: number;\n    scale: number;\n\n    static ACCEL_RATE: number = 0.08;\n    static VEL_MAX: number = 6.5;\n    static ROT_ACCEL_MAX: number = 4.08;\n    static ROT_ACCEL_SCALE: number = 1.1;\n    static ROT_VEL_MAX: number = 0.01;\n    static SCALE_MAX: number = 1;\n    static SCALE_MIN: number = 0.1;\n\n    constructor(el: HTMLElement) {\n        // the DOM element\n        this.el = el;\n\n        let bounds = el.getBoundingClientRect();\n\n        // original position\n        this.opos = new Vec2(bounds.x, bounds.y);\n\n        // dimensions\n        this.size = new Vec2(bounds.width, bounds.height);\n\n        // current position offset\n        this.off = new Vec2(0, 0);\n\n        // velocity\n        this.vel = new Vec2(0, 0);\n\n        // acceleration\n        this.acc = new Vec2(0, 0);\n\n        // rotation\n        this.rot = 0;\n\n        // angular velocity\n        this.rotv = 0;\n\n        // angular momentum (torque)\n        this.torque = 0;\n\n        this.scale = 1;\n    }\n\n    updateOriginalPosition() {\n        // return to original position, mid-frame\n        this.el.style.transform = \"none\";\n        let bounds = this.el.getBoundingClientRect();\n        this.opos.set(bounds.x, bounds.y);\n    }\n\n    animate() {\n        this.updateAccel();\n        this.updateVelocity();\n        this.updatePos();\n        this.updateAngularAccel();\n        this.updateAngularVelocity();\n        this.updateAngle();\n        this.updateTransform();\n    }\n\n    // Get the absolute position (original position + offset)\n    get pos(): Vec2 {\n        return new Vec2(\n            this.opos.x + this.off.x,\n            this.opos.y + this.off.y,\n        );\n    }\n\n    updateAngularAccel() {\n        let cross = this.pos.cross(mouse) * Rect.ROT_ACCEL_SCALE;\n        if (Math.abs(cross) > Rect.ROT_ACCEL_MAX) {\n            cross = cross / Math.abs(cross) * Rect.ROT_ACCEL_MAX;\n        }\n        this.torque = -cross;\n    }\n\n    updateAngularVelocity() {\n        this.rotv += this.torque;\n        if (Math.abs(this.rotv) > Rect.ROT_VEL_MAX) {\n            this.rotv = Rect.ROT_VEL_MAX * this.rotv / Math.abs(this.rotv);\n        }\n    }\n\n    updateAngle() {\n        this.rot += this.rotv / 10;\n    }\n\n    updateAccel() {\n        // get vec2 pointing from center of rect to mouse\n        this.acc.set(\n            mouse.x - ( this.opos.x + this.off.x + this.size.x / 2 ),\n            mouse.y - ( this.opos.y + this.off.y + this.size.y / 2 )\n        );\n\n        this.acc.scale(Rect.ACCEL_RATE);\n    }\n\n    updateVelocity() {\n        this.vel.add(this.acc);\n\n        const mag = this.vel.mag();\n\n        if (mag > Rect.VEL_MAX) {\n            this.vel.scale(Rect.VEL_MAX);\n        }\n    }\n\n    updatePos() {\n        this.off.add(this.vel);\n    }\n\n    updateTransform() {\n        this.el.style.transform = `translate(${ this.off.x }px, ${ this.off.y }px) rotate(${this.rot}rad) scale(${this.scale})`;\n    }\n}\n\nfunction animate(rects: Rect[]) {\n    requestAnimationFrame(() => animate(rects));\n\n    for (const rect of rects) {\n        rect.animate();\n    }\n}\n\nexport function eggify(selector: string) {\n    const rects = [...document.querySelectorAll(selector)].map((el: HTMLElement) => new Rect(el));\n\n    document.addEventListener(\"resize\", (ev: any) => {\n        rects.forEach(rect => rect.updateOriginalPosition());\n    });\n\n    animate(rects);\n}\n"],
  "mappings": "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",
  "names": []
}
