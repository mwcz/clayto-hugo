<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on clayto</title>
    <link>https://clayto.com/rust/</link>
    <description>Recent content in Rust on clayto</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Jul 2021 23:57:49 -0400</lastBuildDate><atom:link href="https://clayto.com/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shaking Off the Rust 2: Ray Tracing in WebAssembly</title>
      <link>https://clayto.com/2021/07/shaking-off-the-rust-2-ray-tracing-in-webassembly/</link>
      <pubDate>Mon, 05 Jul 2021 23:57:49 -0400</pubDate>
      
      <guid>https://clayto.com/2021/07/shaking-off-the-rust-2-ray-tracing-in-webassembly/</guid>
      <description>Rust. A ray tracer. The dream of WebAssembly. One dangerous idea that could ruin everything.
This was the scene at the end of my last post, which covered creating a ray tracer in Rust using Peter Shirley&amp;rsquo;s outstanding Ray Tracing in One Weekend. In the wrap-up to that post, I expressed an interest in creating a WebAssembly build of the ray tracer, and that project is what follows.
The process of targeting WebAssembly went well, overall.</description>
    </item>
    
    <item>
      <title>Shaking Off the Rust 1: Ray Tracing in One Weekend</title>
      <link>https://clayto.com/2021/02/shaking-off-the-rust-1-ray-tracing-in-one-weekend/</link>
      <pubDate>Mon, 08 Feb 2021 22:38:50 -0500</pubDate>
      
      <guid>https://clayto.com/2021/02/shaking-off-the-rust-1-ray-tracing-in-one-weekend/</guid>
      <description>Two classes stand out as my favorites from computer science at NCSU: x86 assembly, taught by Dana Lasher, and computer graphics, taught by Stuart Heinrich. In the graphics course, we wrote a rasterizer and a ray tracer (which I never finished ðŸ˜…).
In the 16 years since, I&amp;rsquo;ve been working happily in web development, but I&amp;rsquo;ve started to lament losing touch with lower-level, near-metal (ðŸ¤˜) programming which captured my interest so much in college.</description>
    </item>
    
  </channel>
</rss>
