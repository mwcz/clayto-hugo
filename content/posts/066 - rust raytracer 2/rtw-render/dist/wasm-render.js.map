{
  "version": 3,
  "sources": ["../pkg/wasm.js", "../wasm-render.js"],
  "sourcesContent": ["\nlet wasm;\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n/**\n* Example render.\n* @returns {WasmFinalImage}\n*/\nexport function render() {\n    var ret = wasm.render();\n    return WasmFinalImage.__wrap(ret);\n}\n\n/**\n*/\nexport class WasmFinalImage {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WasmFinalImage.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmfinalimage_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get width() {\n        var ret = wasm.__wbg_get_wasmfinalimage_width(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set width(arg0) {\n        wasm.__wbg_set_wasmfinalimage_width(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get height() {\n        var ret = wasm.__wbg_get_wasmfinalimage_height(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set height(arg0) {\n        wasm.__wbg_set_wasmfinalimage_height(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get samples_per_pixel() {\n        var ret = wasm.__wbg_get_wasmfinalimage_samples_per_pixel(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set samples_per_pixel(arg0) {\n        wasm.__wbg_set_wasmfinalimage_samples_per_pixel(this.ptr, arg0);\n    }\n    /**\n    * @returns {BigInt}\n    */\n    get total_rays() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.__wbg_get_wasmfinalimage_total_rays(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            u32CvtShim[0] = r0;\n            u32CvtShim[1] = r1;\n            const n0 = uint64CvtShim[0];\n            return n0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {BigInt} arg0\n    */\n    set total_rays(arg0) {\n        uint64CvtShim[0] = arg0;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        wasm.__wbg_set_wasmfinalimage_total_rays(this.ptr, low0, high0);\n    }\n    /**\n    * @returns {Uint8ClampedArray}\n    */\n    get pixels() {\n        var ret = wasm.wasmfinalimage_pixels(this.ptr);\n        return takeObject(ret);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('wasm_bg.wasm', import.meta.url);\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbg_buffer_9e184d6f785de5ed = function(arg0) {\n        var ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_fade671d5e166a76 = function(arg0, arg1, arg2) {\n        var ret = new Uint8ClampedArray(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_54026f195bd9459a = function(arg0) {\n        var ret = new Uint8ClampedArray(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        var ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n\n    return wasm;\n}\n\nexport default init;\n\n", "import init, { render } from \"./pkg/wasm.js\";\n\n/**\n * Initialize wasm module and run the render function.  Embeds the render\n * result (flat RGBA array of u8's) into a Uint8ClampedArray view and embeds\n * that into an ImageData object suitable to draw into a <canvas>.\n *\n * ImageData is a supported type to pass to/from Web Workers:\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n */\nexport async function wasmRender() {\n    console.time(\"tracing rays\");\n    const renderResult = render();\n    console.timeEnd(\"tracing rays\");\n\n    return renderResult;\n}\n\n/**\n * Initialize the WASM module.\n */\nexport async function wasmInit() {\n    console.time(\"init\");\n    await init();\n    console.timeEnd(\"init\");\n}\n"],
  "mappings": "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",
  "names": []
}
