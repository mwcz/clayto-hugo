{"version":3,"sources":["../../pfe-sass/mixins/_custom-properties.scss","pfe-icon.css","../../pfe-sass/mixins/_mixins.scss","pfe-icon.scss"],"names":[],"mappings":"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","file":"pfe-icon.css","sourcesContent":["/// ===========================================================================\n/// Broadcast mixin, for use with container components.\n///\n/// This will print all the broadcast variables, and set the value to the theme of your choosing, like on-dark or on-saturated.\n/// @param {String} $theme - Look up values from theme contexts, i.e. \"light\" or \"saturated\"\n/// @param {List | String} $broadcast [$BROADCAST-VARS] -  Optionally specify only one broadcast variable instead of the whole set, i.e. \"text\"\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $BROADCAST-VARS - Default list of supported broadcast variables\n///\n/// @example Usage in a container component, i.e. pfe-card:\n/// ```\n///    :host {\n///      @include pfe-set-broadcast-theme(dark);\n///    }\n/// ```\n/// @output:\n/// ```\n///    :host {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n///    }\n/// ```\n/// ===========================================================================\n@mixin pfe-set-broadcast-theme($theme, $broadcast: $BROADCAST-VARS) {\n    @each $type in $broadcast {\n        $list: ();\n        $string: \"\";\n        $context: \"\";\n        $state: \"\";\n\n        @if str-starts-with($type, \"link\") {\n            $list: append($list, \"#{$type}\");\n\n            @each $s in (hover, focus, visited) {\n                $state: \"--#{$s}\";\n                $string: \"#{$type}#{$state}\";\n\n                @if not index($list, $string) {\n                    $list: append($list, \"#{$type}#{$state}\");\n                }\n            }\n        }\n        @else {\n            @if not index($list, $string) {\n                $list: append($list, \"#{$type}\");\n            }\n        }\n\n        @if index($THEMES, $theme) != null {\n            @if $theme != \"light\" {\n                $context: \"--on-#{$theme}\";\n            }\n        }\n        \n        @each $item in $list {\n            @if not index($BROADCAST-VARS, $type) {\n                @warn \"--#{$repo}-broadcasted--#{$item} variable is not in the $BROADCAST-VARS list.\";\n            }\n            @else if not map-has-key($pfe-broadcasted, #{$item}#{$context}) {\n                @warn \"#{$item}#{$context} value does not currently exist.\";\n            }\n            @else {\n                @if index($THEMES, $theme) != null {\n                    @if map-get($pfe-colors, $item) != null {\n                        --#{$repo}-broadcasted--#{$item}: var(--#{$repo}-theme--color--#{$item}#{$context}, #{map-get($pfe-broadcasted, #{$item}#{$context})});\n                    }\n                    @else if map-get($pfe-vars, $item) {\n                        --#{$repo}-broadcasted--#{$item}: var(--#{$repo}-theme--#{$item}#{$context}, #{map-get($pfe-broadcasted, #{$item}#{$context})});\n                    }\n                    @else {\n                        --#{$repo}-broadcasted--#{$item}: #{map-get($pfe-broadcasted, #{$item}#{$context})};\n                    }\n                }\n                @else {\n                    @error \"The #{$theme} context does not appear to be part of a supported theme.\";\n                }\n            }\n        }\n    }\n}\n\n/// ===========================================================================\n/// Define local variable\n///\n/// Returns CSS Variable for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $value - The value of the css variable being defined\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@mixin pfe-set-local($variables) {\n    @each $property, $value in $variables {\n        $name: \"--#{$property}\";\n        $styles: $value;\n\n        @if type-of($value) == \"map\" {\n            @each $prop, $v in $value {\n                $name: \"__#{$property}--#{$prop}\";\n                $styles: $v;\n\n                // Print the variable definition\n                --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n            }\n        }\n        @else {\n            // Print the variable definition\n            --#{$repo}-#{$LOCAL}#{$name}: #{$styles};\n        }\n    }\n}\n\n/// ===========================================================================\n/// @alias pfe-set-local\n/// ===========================================================================\n@mixin pfe-print-variables($variables) {\n    @include pfe-set-local($variables);\n}\n\n/// ===========================================================================\n/// Surface properties  \n/// This mixin creates an attribute for all the surface colors, then prints the local background color variable for the component, with the correct theme colors. \n/// @param {List | String} $surfaces [$SURFACES] - defaults to the global $SURFACES list of all supported colors\n/// @param {String} $attr-name [pfe-color] - defaults to pfe-color, optionally pass in a custom name for the data attribute\n///\n/// @example \n/// ```\n/// $LOCAL: band;\n/// @include surfaces;\n/// ```\n///\n/// @output\n/// ```\n/// :host([pfe-color=\"darker\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darker, #464646);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"darkest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darkest, #131313);\n///   --theme: dark;\n/// }\n/// \n/// :host([pfe-color=\"base\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lighter\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lighter, #ececec);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"lightest\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n///   --theme: light;\n/// }\n/// \n/// :host([pfe-color=\"accent\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--accent, #ee0000);\n///   --theme: saturated;\n/// }\n/// \n/// :host([pfe-color=\"complement\"]) {\n///   --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--complement, #0477a4);\n///   --theme: saturated;\n/// }\n/// ```\n/// ===========================================================================\n@mixin pfe-surfaces($surfaces: $SURFACE, $attr-name: #{$repo}-color) {\n    @each $color in $surfaces {\n        $theme: #{pfe-get-theme(surface--#{$color}--theme)};\n        :host([#{$attr-name}=\"#{$color}\"]) {\n            @include pfe-set-local(\n                ( BackgroundColor: #{pfe-color(surface--#{$color})} )\n            );\n            --theme: #{pfe-color( surface--#{$color}--theme, #{$theme} );\n            @include browser-query(ie11) {\n                background-color: #{map-get($pfe-colors, surface--lightest)} !important;\n                color: #{pfe-color(text)} !important;\n            }\n        }\n    }\n}\n\n/// ===========================================================================\n/// Context properties\n///\n/// Prints the `on` attribute with IE11 fallbacks\n///\n/// @param {List} themes [$THEMES] - defaults to the global $THEMES list of all supported contexts\n/// @param {Boolean} ie-fallback [true] - defaults to true, prints IE11 fallbacks\n/// @example\n/// ```\n///   @include theme-contexts; // imports on=\"light\" etc support\n/// ```\n///\n/// @output\n/// ```\n/// :host([on=\"dark\"]) {\n///   --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///   --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///   --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///   --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///   --pfe-broadcasted--link-decoration: none;\n///   --pfe-broadcasted--link-decoration--hover: underline;\n///   --pfe-broadcasted--link-decoration--focus: underline;\n///   --pfe-broadcasted--link-decoration--visited: none;\n/// }\n/// \n/// @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n///   :host([on=\"dark\"]) {\n///     color: #fff;\n///     color: var(--pfe-theme--color--text--on-dark, #fff);\n///   }\n/// }\n/// ```\n/// ...as well as all the values for :host([on=\"saturated\"])  and  :host([on=\"light\"]) \n/// ===========================================================================\n@mixin pfe-theme-contexts($themes: $THEMES, $ie-fallback: true) {\n    // Helper attributes to aid in theming\n    @each $theme in $themes {\n        :host([on=\"#{$theme}\"]) {\n            @include pfe-set-broadcast-theme($theme);\n        }\n        @if $ie-fallback {\n            @include browser-query(ie11) {\n                :host {\n                    color: #{pfe-color(text)} !important;\n                }\n            }\n        }\n    }\n}\n",":host([on=\"dark\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n  --pfe-broadcasted--link-decoration: none;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: none;\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  /* IE10+ */\n  :host {\n    color: var(--pfe-theme--color--text, #333) !important;\n  }\n}\n\n:host([on=\"saturated\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-saturated, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-saturated, #fff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-saturated, white);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-saturated, white);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-saturated, #b38cd9);\n  --pfe-broadcasted--link-decoration: underline;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: underline;\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  /* IE10+ */\n  :host {\n    color: var(--pfe-theme--color--text, #333) !important;\n  }\n}\n\n:host([on=\"light\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #333);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #003366);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #003366);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, rebeccapurple);\n  --pfe-broadcasted--link-decoration: none;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: none;\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  /* IE10+ */\n  :host {\n    color: var(--pfe-theme--color--text, #333) !important;\n  }\n}\n\n:host {\n  --pfe-icon--Spacing:                 var(--pfe-theme--container-spacer, 16px);\n  --pfe-icon--Size:                    var(--pfe-theme--icon-size, 1em);\n  --pfe-icon--Padding:                 0;\n  --pfe-icon--Color:                   var(--pfe-broadcasted--text, #333);\n  --pfe-icon--BackgroundColor:         transparent;\n  --pfe-icon--BorderColor:             transparent;\n  position: relative;\n  display: inline-block;\n  max-width: calc(var(--pfe-icon--Size) + (var(--pfe-icon--Padding) * 2));\n  width: fit-content !important;\n  max-height: calc(var(--pfe-icon--Size) + (var(--pfe-icon--Padding) * 2));\n  height: fit-content !important;\n  line-height: 0;\n}\n\n:host([data-block]) {\n  display: block;\n  margin-bottom: var(--pfe-icon--Spacing);\n  margin-top: var(--pfe-icon--Spacing);\n}\n\n:host([data-block]):first-child {\n  margin-top: 0;\n}\n\n:host svg {\n  width: var(--pfe-icon--Size);\n  height: var(--pfe-icon--Size);\n}\n\n:host(:not(.load-failed)) {\n  vertical-align: middle;\n  border-radius: 50%;\n  background-color: var(--pfe-icon--BackgroundColor, transparent);\n  border: var(--pfe-theme--ui--border-width, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-icon--BorderColor, transparent);\n  padding: var(--pfe-icon--Padding, 0);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host(:not(.load-failed)) {\n    /* IE10+ */\n    background-color: white !important;\n  }\n  :host(:not(.load-failed)) svg filter feFlood {\n    flood-color: black !important;\n  }\n}\n\n@supports (-ms-accelerator: true) {\n  :host(:not(.load-failed)) {\n    /* Microsoft Edge Browser 12+ */\n    background-color: white !important;\n  }\n  :host(:not(.load-failed)) svg filter feFlood {\n    flood-color: black !important;\n  }\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host(:not(.load-failed)) svg image {\n    /* IE10+ */\n    filter: none;\n  }\n}\n\n:host(:not(.load-failed)) filter feFlood {\n  flood-color: var(--pfe-icon--Color);\n}\n\n:host(:not(.load-failed)) .pfe-icon--fallback {\n  display: none;\n}\n\n:host([size=\"2x\"]) {\n  --pfe-icon--Size: 2em;\n}\n\n:host([size=\"3x\"]) {\n  --pfe-icon--Size: 3em;\n}\n\n:host([size=\"4x\"]) {\n  --pfe-icon--Size: 4em;\n}\n\n:host([size=\"xl\"]) {\n  --pfe-icon--Size: 100px;\n}\n\n:host([size=\"lg\"]) {\n  --pfe-icon--Size: 64px;\n}\n\n:host([size=\"md\"]) {\n  --pfe-icon--Size: 32px;\n}\n\n:host([size=\"sm\"]) {\n  --pfe-icon--Size: 14px;\n}\n\n:host([color=\"base\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--ui-base, #0477a4);\n}\n\n:host([color=\"complement\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--ui-complement, #464646);\n}\n\n:host([color=\"accent\"]) {\n  --pfe-broadcasted--text: var(--pfe-theme--color--ui-accent, #e00);\n}\n\n:host([color=\"critical\"]) {\n  --pfe-broadcasted--text: feedback--critical;\n}\n\n:host([color=\"important\"]) {\n  --pfe-broadcasted--text: feedback--important;\n}\n\n:host([color=\"moderate\"]) {\n  --pfe-broadcasted--text: feedback--moderate;\n}\n\n:host([color=\"success\"]) {\n  --pfe-broadcasted--text: feedback--success;\n}\n\n:host([color=\"info\"]) {\n  --pfe-broadcasted--text: feedback--info;\n}\n\n:host([color=\"default\"]) {\n  --pfe-broadcasted--text: feedback--default;\n}\n\n:host([circled]) {\n  --pfe-icon--BackgroundColor:       transparent;\n  --pfe-icon--BorderColor:           var(--pfe-theme--color--surface--border, #d2d2d2);\n  --pfe-icon--Padding:               0.05em;\n}\n\n:host([circled=\"base\"]) {\n  --pfe-icon--BackgroundColor:       var(--pfe-theme--color--surface--base, #dfdfdf);\n  --pfe-icon--BorderColor:           transparent;\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #333);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #003366);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #003366);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, rebeccapurple);\n  --pfe-broadcasted--link-decoration: none;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: none;\n}\n\n:host([circled=\"lightest\"]) {\n  --pfe-icon--BackgroundColor:       var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-icon--BorderColor:           transparent;\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #333);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #003366);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #003366);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, rebeccapurple);\n  --pfe-broadcasted--link-decoration: none;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: none;\n}\n\n:host([circled=\"light\"]) {\n  --pfe-icon--BackgroundColor:       var(--pfe-theme--color--surface--lighter, #ececec);\n  --pfe-icon--BorderColor:           transparent;\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #333);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #003366);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #003366);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, rebeccapurple);\n  --pfe-broadcasted--link-decoration: none;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: none;\n}\n\n:host([circled=\"dark\"]) {\n  --pfe-icon--BackgroundColor:       var(--pfe-theme--color--surface--darker, #464646);\n  --pfe-icon--BorderColor:           transparent;\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n  --pfe-broadcasted--link-decoration: none;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: none;\n}\n\n:host([circled=\"darkest\"]) {\n  --pfe-icon--BackgroundColor:       var(--pfe-theme--color--surface--darkest, #131313);\n  --pfe-icon--BorderColor:           transparent;\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n  --pfe-broadcasted--link-decoration: none;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: none;\n}\n\n:host([circled=\"complement\"]) {\n  --pfe-icon--BackgroundColor:       var(--pfe-theme--color--surface--complement, #0477a4);\n  --pfe-icon--BorderColor:           transparent;\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-saturated, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-saturated, #fff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-saturated, white);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-saturated, white);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-saturated, #b38cd9);\n  --pfe-broadcasted--link-decoration: underline;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: underline;\n}\n\n:host([circled=\"accent\"]) {\n  --pfe-icon--BackgroundColor:       var(--pfe-theme--color--surface--accent, #e00);\n  --pfe-icon--BorderColor:           transparent;\n  --pfe-broadcasted--text: var(--pfe-theme--color--text--on-saturated, #fff);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link--on-saturated, #fff);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-saturated, white);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-saturated, white);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-saturated, #b38cd9);\n  --pfe-broadcasted--link-decoration: underline;\n  --pfe-broadcasted--link-decoration--hover: underline;\n  --pfe-broadcasted--link-decoration--focus: underline;\n  --pfe-broadcasted--link-decoration--visited: underline;\n}\n\n:host(.load-failed) {\n  --pfe-icon--BackgroundColor: transparent;\n  --pfe-icon--BorderColor: transparent;\n  --pfe-icon--Padding: 0;\n}\n\n:host(.load-failed) ::slotted(*:first-child) {\n  margin-top: 0;\n}\n\n:host(.load-failed) ::slotted(*:last-child) {\n  margin-bottom: 0;\n}\n\n:host(.load-failed) svg image {\n  display: none;\n}\n\n:host(.load-failed.has-fallback) svg,\n:host(.load-failed[on-fail=\"collapse\"]) svg {\n  display: none;\n}\n\n:host(.load-failed[on-fail=\"collapse\"]) {\n  --pfe-icon--Size: 0;\n}\n","@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n        @content;\n      }\n    }\n\n    @if $browser == edge12 {\n      @supports (-ms-accelerator: true) { /* Microsoft Edge Browser 12+ */\n        @content;\n    }\n  }\n\n    @if $browser == edge {\n      @supports (-ms-ime-align: auto) { /* Microsoft Edge Browser 16+ (All) */\n        @content;\n      }\n    }\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: #{pfe-var(surface--border-style)};\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;\n}\n","@import \"../../pfe-sass/pfe-sass\";\n@include pfe-theme-contexts; // imports on=\"light\" etc support\n\n\n$LOCAL: icon;\n\n/// ===========================================================================\n/// Component Specific SASS Vars\n/// ===========================================================================\n\n// Todo: convert these also\n$pfe-icon--padding:       .05em;\n$pfe-icon--border-width:  #{pfe-var(ui--border-width)};\n$pfe-icon--border-style:  #{pfe-var(ui--border-style)};\n\n@mixin greyscale-fallback() {\n  background-color: white !important;\n\n  & svg filter feFlood {\n      flood-color: black !important;\n  }\n}\n\n:host {\n  --pfe-icon--Spacing:                 #{pfe-var(container-spacer)};\n  --pfe-icon--Size:                    #{pfe-var(icon-size)};\n  --pfe-icon--Padding:                 0;\n  --pfe-icon--Color:                   #{pfe-apply-broadcast(text)};\n  --pfe-icon--BackgroundColor:         transparent;\n  --pfe-icon--BorderColor:             transparent;\n\n  position: relative;\n  display:  inline-block;\n  // Supports sizing while preserving aspect ratio (despite layout)\n  max-width:    calc(#{pfe-local(Size)} + (#{pfe-local(Padding)} * 2));\n  width:    fit-content !important;\n  max-height:    calc(#{pfe-local(Size)} + (#{pfe-local(Padding)} * 2));\n  height:   fit-content !important;\n  line-height: 0;\n\n  @at-root #{&}([data-block]) {\n    display: block;\n    margin-bottom: #{pfe-local(Spacing)};\n    margin-top:    #{pfe-local(Spacing)};\n\n    &:first-child {\n      margin-top: 0;\n    }\n  }\n\n  svg {\n    width: #{pfe-local(Size)};\n    height:#{pfe-local(Size)};\n  }\n}\n\n:host(:not(.load-failed)) {\n  vertical-align: middle;\n  border-radius: 50%;\n  background-color: #{pfe-local($cssvar: BackgroundColor, $fallback: transparent)};\n  border: #{$pfe-icon--border-width} #{$pfe-icon--border-style} #{pfe-local($cssvar: BorderColor, $fallback: transparent)};\n  padding: #{pfe-local($cssvar: Padding, $fallback: 0)};\n\n  @include browser-query(ie11) {\n      @include greyscale-fallback();\n  }\n\n\n  // Edge 12+ CSS\n  @include browser-query(edge12) {\n      @include greyscale-fallback();\n  }\n\n  svg image {\n    @include browser-query(ie11) {\n      filter: none;\n    }\n  }\n\n  filter feFlood {\n    flood-color: #{pfe-local(Color)};\n  }\n\n  .pfe-icon--fallback {\n    display: none;\n  }\n}\n\n@for $num from 2 through 4 {\n  :host([size=\"#{$num}x\"]) {\n    --pfe-icon--Size: #{$num}em;\n  }\n}\n\n// TODO: Sort out sizing\n:host([size=\"xl\"]) {\n  --pfe-icon--Size: 100px;\n}\n\n:host([size=\"lg\"]) {\n  --pfe-icon--Size: 64px;\n}\n\n:host([size=\"md\"]) {\n  --pfe-icon--Size: 32px;\n}\n\n:host([size=\"sm\"]) {\n  --pfe-icon--Size: 14px;\n}\n\n@each $color in (base, complement, accent) {\n  :host([color=\"#{$color}\"]) {\n    --pfe-broadcasted--text: #{pfe-color(ui-#{$color})};\n  }\n}\n\n@each $level in (critical, important, moderate, success, info, default) {\n  :host([color=\"#{$level}\"]) {\n    --pfe-broadcasted--text: #{(feedback--#{$level})};\n  }\n}\n\n// May need Feedback Darkest colors too.\n\n:host([circled]) {\n  --pfe-icon--BackgroundColor:       transparent;\n  --pfe-icon--BorderColor:           #{pfe-color(surface--border)};\n  --pfe-icon--Padding:               #{$pfe-icon--padding};\n}\n\n@each $color in (base, lightest, lighter, darker, darkest, complement, accent) {\n  $name: if($color == lighter, light, if($color == darker, dark, $color));\n  :host([circled=\"#{$name}\"]) {\n    --pfe-icon--BackgroundColor:       #{pfe-color(surface--#{$color})};\n    --pfe-icon--BorderColor:           transparent;\n    @include pfe-set-broadcast-theme(#{pfe-get-theme(surface--#{$color}--theme)});\n  }\n}\n\n:host(.load-failed) {\n  --pfe-icon--BackgroundColor: transparent;\n  --pfe-icon--BorderColor: transparent;\n  --pfe-icon--Padding: 0;\n\n  ::slotted(*:first-child) {\n    margin-top: 0;\n  }\n\n  ::slotted(*:last-child) {\n    margin-bottom: 0;\n  }\n\n  svg image {\n    display: none;\n  }\n}\n\n:host(.load-failed.has-fallback) svg,\n:host(.load-failed[on-fail=\"collapse\"]) svg {\n  display: none;\n}\n\n:host(.load-failed[on-fail=\"collapse\"]) {\n  --pfe-icon--Size: 0;\n}\n"]}